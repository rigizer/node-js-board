doctype html
html
    head
        title 게시판 목록

        // Bootstrap Framework 사용

        // Latest compiled and minified CSS
        link(rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css")

        // jQuery library
        script(src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js")

        // Popper JS
        script(src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js")

        // Latest compiled JavaScript
        script(src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js")

        // Bootstrap 4 Icons
        link(rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.0/css/all.css" integrity="sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ" crossorigin="anonymous")

        // Google Web Fonts
        link(rel="preconnect" href="https://fonts.gstatic.com")
        link(rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@300&display=swap")
        link(rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Do+Hyeon&display=swap")
        link(rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Righteous&display=swap")

        style.
            .center {
                margin: auto;
                text-align: center;
            }

            .ul-center {
                margin-left: auto;
                margin-right: auto;
            }

            .title {
                font-family: 'Righteous', cursive;
            }

            .msg-title {
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;
            }

            .msg-writer {
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;
            }

            .tb-fixed {
                table-layout: fixed;
            }

            body {
                font-family: 'Noto Sans KR', sans-serif;
            }

            h1 {
                font-family: 'Do Hyeon', sans-serif;
            }

            th {
                background-color: #F9F9FB;
            }

            a:link {color: black;}
            a:visited {color: black;}
            a:active {color: black;}
            a:hover {color: black;}
    body
        nav(class="navbar navbar-expand-sm bg-dark navbar-dark")
            div(class="container")
                a(class="navbar-brand title" href="/boardList") NodeJS-Board
                ul(class="navbar-nav")
                    li(class="nav-item")
                        a(class="nav-link" href="/boardList") 목록
                    li(class="nav-item")
                        a(class="nav-link" href="/addBoard") 작성
        div(class="container center")
            br

            h1 게시판 목록

            br

            a(href="/addBoard")
                button(type="button" class="btn btn-sm btn-success" style="float: right;") 작성

            br
            br

            table(class="table table-hover tb-fixed")
                thead
                    tr
                        th(width="15%") 번호
                        th(width="65%") 제목
                        th(width="20%") 작성자
                tbody
                    each board in model.boardList
                        tr
                            td #{board.board_no}
                            td
                                a(href="/boardOne?boardNo=" + board.board_no) #{board.board_title}
                            td #{board.board_user}

            br

            // 페이지 내비게이션
            ul(class="pagination justify-content-center")
                // 처음으로 버튼
                if model.currentPage > 1
                    // currentPage가 1보다 클 때만 처음으로 갈 수 있음
                    li(class="page-item")
                        a(class="page-link" href="/boardList?currentPage=1&searchOption=" + model.searchOption + "&search=" + model.search)
                            i(class="fas fa-angle-double-left")
                else
                    // 첫 페이지 일 때 처음으로 버튼 표시 안 함
                    li(class="page-item disabled")
                        a(class="page-link" href="#")
                            i(class="fas fa-angle-double-left")

                // 이전 버튼
                if model.currentPage > 1
                    // currentPage가 1보다 클 때만 이전으로 갈 수 있음
                    li(class="page-item")
                        a(class="page-link" href="/boardList?currentPage=" + model.prePage + "&searchOption=" + model.searchOption + "&search=" + model.search)
                            i(class="fas fa-angle-left")
                else
                    // 1이거나 그 이하면 버튼 표시 안 함
                    li(class="page-item disabled")
                        a(class="page-link" href="#")
                            i(class="fas fa-angle-left")
            
                // 현재 페이지 표시
                -for(var i = model.navFirstPage; i <= model.navLastPage; i++)
                    if i <= model.lastPage
                        if i == model.currentPage
                            li(class="page-item active")
                                a(class="page-link" href="#") #{i}
                        else
                            li(class="page-item")
                                a(class="page-link" href="/boardList?currentPage=" + i + "&searchOption=" + model.searchOption + "&search=" + model.search) #{i}

                // 다음 버튼
                if model.currentPage < model.lastPage
                    // currentPage가 lastPage보다 작을 때만 다음으로 갈 수 있음
                    li(class="page-item")
                        a(class="page-link" href="/boardList?currentPage=" + model.nextPage + "&searchOption=" + model.searchOption + "&search=" + model.search)
                            i(class="fas fa-angle-right")
                else
                    // 마지막 페이지 일 때 다음 버튼 표시 안 함
                    li(class="page-item disabled")
                        a(class="page-link" href="#")
                            i(class="fas fa-angle-right")

                // 마지막으로 버튼
                if model.currentPage < model.lastPage
                    // currentPage가 lastPage보다 작을 때만 마지막으로 갈 수 있음
                    li(class="page-item")
                        a(class="page-link" href="/boardList?currentPage=" + model.lastPage + "&searchOption=" + model.searchOption + "&search=" + model.search)
                            i(class="fas fa-angle-double-right")
                else
                    // 마지막 페이지 일 때 마지막으로 버튼 표시 안 함
                    li(class="page-item disabled")
                        a(class="page-link" href="#")
                            i(class="fas fa-angle-double-right")

            // 총 페이지 수 출력
            button(type="button" class="btn btn-sm btn-dark") #{model.currentPage} / #{model.lastPage} 페이지

            br
            br

            form(action="boardList" method="get")
                div(class="input-group" style="width: 50%; margin: auto;")
                    div(class="input-group-prepend")
                        span(class="input-group-text") 검색

                    select(class="form-control" name="searchOption")
                        if model.searchOption == "titleContent"
                            option(value="titleContent" selected) 제목+내용
                        else
                            option(value="titleContent") 제목+내용
                        if model.searchOption == "title"
                            option(value="title" selected) 제목
                        else
                            option(value="title") 제목
                        if model.searchOption == "content"
                            option(value="content" selected) 내용
                        else
                            option(value="content") 내용
                        if model.searchOption == "user"
                            option(value="content" selected) 내용
                        else
                            option(value="user") 작성자

                    input(type="text" class="form-control" name="search" value=`${model.search}`)
                        
                    div(class="input-group-append")
                        button(type="submit" class="btn btn-secondary") 검색

        br